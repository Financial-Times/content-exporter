apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}"
    visualize: "true"
    app: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.service.name }}
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: APP_NAME
          value: "{{ .Values.service.name }}"
        - name: ENRICHED_CONTENT_BASE_URL
          value: "{{ .Values.env.enrichedContent.baseUrl }}"
        - name: ENRICHED_CONTENT_HEALTH_URL
          value: "{{ .Values.env.enrichedContent.baseUrl }}/__gtg"
        - name: S3_WRITER_BASE_URL
          value: "{{ .Values.env.s3Writer.baseUrl }}"
        - name: S3_WRITER_HEALTH_URL
          value: "{{ .Values.env.s3Writer.baseUrl }}/__gtg"
        - name: X_POLICY_HEADER_VALUES
          value: "{{ .Values.env.xPolicyHeaderValues }}"
        - name: ALLOWED_CONTENT_TYPES
          value: "{{ .Values.env.allowedContentTypes }}"
        - name: MONGO_CONNECTION
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: mongo.addresses
        - name: KAFKA_ADDRS
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: zookeeper.url
        - name: IS_INC_EXPORT_ENABLED
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: contentExporter.isIncExportEnabled
        - name: GROUP_ID
          value: "{{ .Values.env.kafka.groupId }}"
        - name: TOPIC
          value: "{{ .Values.env.kafka.topic }}"
        - name: CONTENT_ORIGIN_ALLOWLIST
          value: {{ .Values.env.contentOriginAllowlist }}
        - name: CONTENT_RETRIEVAL_THROTTLE
          value: "{{ .Values.env.contentRetrievalThrottle }}"
        ports:
        - containerPort: 8080
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 8080
        readinessProbe:
          httpGet:
            path: /__gtg
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 3
        resources:
{{ toYaml .Values.resources | indent 12 }}
